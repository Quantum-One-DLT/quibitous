sys	pack-assets.py	/^import sys$/;"	i
platform	pack-assets.py	/^import platform$/;"	i
hashlib	pack-assets.py	/^import hashlib$/;"	i
shutil	pack-assets.py	/^import shutil$/;"	i
os	pack-assets.py	/^import os$/;"	i
sha256sum	pack-assets.py	/^def sha256sum(path):$/;"	f
version	pack-assets.py	/^version = sys.argv[1]$/;"	v
target	pack-assets.py	/^target = sys.argv[2]$/;"	v
target_cpu	pack-assets.py	/^target_cpu = sys.argv[3]$/;"	v
archive_basename	pack-assets.py	/^archive_basename = f"quibitous-{version}-{target}-{target_cpu}"$/;"	v
root_dir	pack-assets.py	/^root_dir = f".\/target\/{target}\/release"$/;"	v
quibitous_name	pack-assets.py	/^    quibitous_name = "quibitous.exe"$/;"	v
qcli_name	pack-assets.py	/^    qcli_name = "qcli.exe"$/;"	v
quibitous_name	pack-assets.py	/^    quibitous_name = "quibitous"$/;"	v
qcli_name	pack-assets.py	/^    qcli_name = "qcli"$/;"	v
quibitous_path	pack-assets.py	/^quibitous_path = os.path.join(root_dir, quibitous_name)$/;"	v
qcli_path	pack-assets.py	/^qcli_path = os.path.join(root_dir, qcli_name)$/;"	v
quibitous_checksum	pack-assets.py	/^quibitous_checksum = sha256sum(quibitous_path)$/;"	v
qcli_checksum	pack-assets.py	/^qcli_checksum = sha256sum(qcli_path)$/;"	v
zipfile	pack-assets.py	/^    import zipfile$/;"	i
content_type	pack-assets.py	/^    content_type = "application\/zip"$/;"	v
archive_name	pack-assets.py	/^    archive_name = f"{archive_basename}.zip"$/;"	v
tarfile	pack-assets.py	/^    import tarfile$/;"	i
content_type	pack-assets.py	/^    content_type = "application\/gzip"$/;"	v
archive_name	pack-assets.py	/^    archive_name = f"{archive_basename}.tar.gz"$/;"	v
quibitous1_checksum	pack-assets.py	/^quibitous1_checksum = sha256sum(os.path.join(".\/unpack-test", quibitous_name))$/;"	v
qcli1_checksum	pack-assets.py	/^qcli1_checksum = sha256sum(os.path.join(".\/unpack-test", qcli_name))$/;"	v
archive_checksum	pack-assets.py	/^archive_checksum = sha256sum(archive_name)$/;"	v
checksum_filename	pack-assets.py	/^checksum_filename = f"{archive_name}.sha256"$/;"	v
json	release-info.py	/^import json$/;"	i
os	release-info.py	/^import os$/;"	i
re	release-info.py	/^import re$/;"	i
sys	release-info.py	/^import sys$/;"	i
date	release-info.py	/^from datetime import date$/;"	i
Popen	release-info.py	/^from subprocess import Popen, PIPE$/;"	i
PIPE	release-info.py	/^from subprocess import Popen, PIPE$/;"	i
check_version	release-info.py	/^def check_version(crate):$/;"	f
print_error	release-info.py	/^def print_error(crate, match):$/;"	f
bundle_version	release-info.py	/^def bundle_version(crates):$/;"	f
event_name	release-info.py	/^event_name = sys.argv[1]$/;"	v
date	release-info.py	/^date = date.today().strftime("%Y%m%d")$/;"	v
ref	release-info.py	/^ref = None$/;"	v
ref	release-info.py	/^    ref = os.getenv("GITHUB_REF")$/;"	v
release_type	release-info.py	/^        release_type = "tagged"$/;"	v
release_type	release-info.py	/^        release_type = "nightly"$/;"	v
ref	release-info.py	/^        ref = None$/;"	v
release_type	release-info.py	/^    release_type = "nightly"$/;"	v
crates	release-info.py	/^crates = {$/;"	v
version	release-info.py	/^version = bundle_version(crates)$/;"	v
release_flags	release-info.py	/^release_flags = ""$/;"	v
tag	release-info.py	/^    tag = "v" + version$/;"	v
version	release-info.py	/^    version = re.sub($/;"	v
tag	release-info.py	/^    tag = "nightly." + date$/;"	v
release_flags	release-info.py	/^    release_flags = "--prerelease"$/;"	v
